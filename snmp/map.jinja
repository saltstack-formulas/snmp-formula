# vim: ft=jinja

{# Debian (up to and excluding 9.x 'Stretch') uses snmpd init script for both snmpd/snmptrapd! #}

{% load_yaml as snmp %}
service: snmpd
servicetrap: snmptrapd
config: /etc/snmp/snmpd.conf
configtrap: /etc/snmp/snmptrapd.conf
configagent: /etc/snmp/snmp.conf
mibsdir: /usr/share/snmp/mibs
source: salt://snmp/files/snmpd.conf
sourcetrap: salt://snmp/files/snmptrapd.conf
sourceagent: salt://snmp/files/snmp.conf
trapdargs: -Lsd -p /var/run/snmptrapd.pid
rootgroup: root
{% endload %}

{% load_yaml as platform_specific %}
RedHat:
    pkg: net-snmp
    pkgutils: net-snmp-utils
    dynamicconfig: /var/lib/net-snmp/snmpd.conf
    options: /etc/sysconfig/snmpd
    optionstrap: /etc/sysconfig/snmptrapd
    sourceoptions: salt://snmp/files/snmpd.options
    sourceoptionstrap: salt://snmp/files/snmptrapd.options
Debian:
    pkg: snmpd
    pkgutils: libsnmp-dev
    dynamicconfig: /var/lib/snmp/snmpd.conf
    configdefault: /etc/default/snmpd
    sourcedefault: salt://snmp/files/snmpd.default
    snmpdargs: -Lsd -Lf /dev/null -u snmp -g snmp -I -smux,mteTrigger,mteTriggerConf -p /var/run/snmpd.pid
    mibs:
    snmpdrun: "yes"
    trapdrun: "no"
Suse:
    pkg: net-snmp
    pkgutils: net-snmp
    options: /etc/sysconfig/net-snmp
    sourceoptions: salt://snmp/files/snmpd.options.suse
    sourceoptionstrap: salt://snmp/files/snmptrapd.options.suse
Gentoo:
    pkg: net-analyzer/net-snmp
    configdefault: /etc/conf.d/snmpd
    sourcedefault: salt://snmp/files/snmpd.confd
    snmpdargs: -I -smux
    mibs:
    snmpdrun: "yes"
    trapdrun: "no"
FreeBSD:
    config: /usr/local/etc/snmp/snmpd.conf
    pkg: net-snmp
    pkgutils: net-snmp
    rootgroup: wheel
{% endload %}

{% load_yaml as rhel_specific %}
'7':
    snmpdargs: '-LS0-6d'
'6':
    snmpdargs: '-Lsd -Lf /dev/null -p /var/run/snmpd.pid -a'
'5':
    snmpdargs: '-Lsd -Lf /dev/null -p /var/run/snmpd.pid -a'
{% endload %}

{% set platform_addition = salt['grains.filter_by'](platform_specific, default='RedHat') %}
{% set rhel_addition = salt['grains.filter_by'](rhel_specific, grain='osmajorrelease', default='default') %}
{% set user_override = salt['pillar.get']('snmp', {}) %}

{% do snmp.update(platform_addition) %}

{% if rhel_addition %}
    {% do snmp.update(rhel_addition) %}
{% endif %}

{% import_yaml "snmp/codenamemap.yml" as codemap %}
{% set oscode = salt['grains.filter_by'](codemap, grain='oscodename', default=None) %}
{% if oscode is not none %}
{%   do snmp.update(oscode) %}
{% endif %}

{% if user_override %}
    {% do snmp.update(user_override) %}
{% endif %}
